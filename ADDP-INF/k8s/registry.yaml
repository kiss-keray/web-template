apiVersion: v1
kind: Namespace
metadata:
  name: docker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      volumes:
        - name: registry
          persistentVolumeClaim:
            claimName: registry
      nodeSelector:
        cswx-docker-master: 'true'
      containers:
        - image: registry
          name: docker-registry
#          args:
#            - --privileged
#            -
#docker run -d -p 443:5000 -e
#  REGISTRY_AUTH=token -e REGISTRY_AUTH_TOKEN_REALM=https://docker.xx:5001/auth
#  -e REGISTRY_AUTH_TOKEN_SERVICE="Docker registry" -e REGISTRY_AUTH_TOKEN_ISSUER="DOCKER AUTH SERVER"
#  -e REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/docker.xx.crt
#  -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/docker.xx.crt
#  -e REGISTRY_HTTP_TLS_KEY=/certs/docker.xx.key
#  -v /opt/registry/ssl/:/certs -v /opt/registry:/var/lib/registry
#  --restart=always --name registry_ssl  --privileged registry
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    k8s.eip.work/workload: docker-registry
  labels:
    app: docker-registry
  name: docker-registry
  namespace: docker
spec:
  ports:
    - name: https
      nodePort: 0
      port: 443
      protocol: TCP
      targetPort: 5000
  selector:
    app: docker-registry
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    k8s.eip.work/workload: docker-registry
  labels:
    app: docker-registry
  name: docker-registry
  namespace: docker
spec:
  rules:
    - host: docker.yunxuebao.com
      http:
        paths:
          - backend:
              serviceName: docker-registry
              servicePort: https
            path: /

